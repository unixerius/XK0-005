##########
# The post-install script to setup the central Ansible server.
$serverscript = <<-SERVERSCRIPT
echo "192.168.210.10 ansible ansible.ansible.lab" >> /etc/hosts
echo "192.168.210.11 target1 target1.ansible.lab" >> /etc/hosts
echo "192.168.210.12 target2 target2.ansible.lab" >> /etc/hosts
echo "192.168.210.13 target3 target3.ansible.lab" >> /etc/hosts
echo "192.168.210.14 target4 target4.ansible.lab" >> /etc/hosts
echo "192.168.210.15 target5 target5.ansible.lab" >> /etc/hosts

yum install -y python3 python3-pip dos2unix

yum install -y git chrony
systemctl enable chronyd
systemctl start chronyd

yum install -y ansible-core
ansible-galaxy collection install community.general

groupadd ansible
usermod -a -G ansible vagrant

cp -r /vagrant/ansible /var/ansible
cp /vagrant/ansible.cfg /etc/ansible.cfg
chown -R vagrant:ansible /var/ansible
dos2unix /var/ansible/*

cat > /etc/motd <<-EOF
		== !! NOTE !! ==
You will need to edit /etc/hosts. Currently it's not correct.

Visit every VM in this lab with SSH and collect their IP addresses.
Then update /etc/hosts on this server, so the names and IPs are correct.

EOF

SERVERSCRIPT


##########
# The post-install script for the Ansible target hosts.
$targetscript = <<-TARGETSCRIPT
yum install -y git chrony
systemctl enable chronyd
systemctl start chronyd

groupadd ansible
usermod -a -G ansible vagrant

TARGETSCRIPT


##########
# Defining the five Ansible target hosts.
servers = {
   "ansible.ansible.lab" => ["almalinux/9", 2, 512, 20, "192.168.210.10" ]
}

targets = {
   "target1.ansible.lab" => ["almalinux/9", 1, 512, 10, "192.168.210.11", 8081 ],
   "target2.ansible.lab" => ["almalinux/9", 1, 512, 10, "192.168.210.12", 8082 ],
   "target3.ansible.lab" => ["almalinux/9", 1, 512, 10, "192.168.210.13", 8083 ],
   "target4.ansible.lab" => ["almalinux/9", 1, 512, 10, "192.168.210.14", 8084 ],
   "target5.ansible.lab" => ["almalinux/9", 1, 512, 10, "192.168.210.15", 8085 ]
}


##########
# Starting the actual build.

Vagrant.configure("2") do |config|

  ##########
  # First, define the server that acts as central Ansible host.
  # It will send assignments to all Ansible targets.

  servers.each do | (name, cfg) |
    box, numvcpus, memory, storage, ip = cfg
    config.vm.define name do |machine|

      machine.vm.box      = box
      machine.vm.hostname = name

      machine.vm.synced_folder ".", "/vagrant"

      machine.vm.provider "virtualbox" do |v|
        v.memory = memory
        v.cpus = numvcpus
      end

      machine.vm.provision "setup", type: "shell", inline: $serverscript

    end # end machine config
  end # end servers.each


  ##########
  # Then we define the five Ansible target hosts.
  # These are smaller, light Alpine Linux system for demo purposes.

  targets.each do | (name, cfg) |
    box, numvcpus, memory, storage, ip, pfwd = cfg
    config.vm.define name do |machine|

      machine.vm.box      = box
      machine.vm.hostname = name

      machine.vm.network "forwarded_port", guest: 80, host: pfwd 

      machine.vm.provider "virtualbox" do |v|
        v.memory = memory
        v.cpus = numvcpus
      end

      machine.vm.provision "setup", type: "shell", inline: $targetscript

    end # end machine config
  end # end targets.each

end
